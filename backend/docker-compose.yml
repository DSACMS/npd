services:
  db:
    image: 'postgres:17'
    environment:
      POSTGRES_DB: ${NPD_DB_NAME}
      POSTGRES_USER: ${NPD_DB_USER}
      POSTGRES_PASSWORD: ${NPD_DB_PASSWORD}
    ports:
      - '${NPD_DB_PORT}:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NPD_DB_USER} -d ${NPD_DB_NAME} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    networks:
      - npd
    env_file:
      - .env
  db-migrations:
    image: 'flyway/flyway:10'
    command: -connectRetries=60 migrate
    volumes:
      - '../flyway/sql:/flyway/sql'
    environment:
      FLYWAY_URL: jdbc:postgresql://${NPD_DB_HOST}:5432/${NPD_DB_NAME}
      FLYWAY_USER: ${NPD_DB_USER}
      FLYWAY_PASSWORD: ${NPD_DB_PASSWORD}
    networks:
      - npd
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
  django-web:
    build: .
    container_name: npd
    ports:
      - '8000:8000'
    depends_on:
      db-migrations:
        condition: service_completed_successfully
    networks:
      - npd
    environment:
      NPD_DJANGO_SECRET: ${NPD_DJANGO_SECRET}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${NPD_DB_ENGINE}
      NPD_DB_NAME: ${NPD_DB_NAME}
      NPD_DB_USER: ${NPD_DB_USER}
      NPD_DB_PASSWORD: ${NPD_DB_PASSWORD}
      NPD_DB_HOST: ${NPD_DB_HOST}
      NPD_DB_PORT: 5432
    env_file:
      - .env
    volumes:
      - '.:/app'
      - ./artifacts:/artifacts
volumes:
  postgres_data:
networks:
  npd:
