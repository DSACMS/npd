services:
  db-test:
    image: postgres:17
    container_name: npd_db_test
    environment:
      POSTGRES_DB: test_${NPD_DB_NAME}
      POSTGRES_USER: ${NPD_DB_USER}
      POSTGRES_PASSWORD: ${NPD_DB_PASSWORD}
    ports:
      - "${NPD_DB_PORT}:5432"
    networks:
      - npd
    tmpfs:
      - /var/lib/postgresql/data:rw,size=200m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NPD_DB_USER} -d test_${NPD_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
  db-migrations:
    image: flyway/flyway:10
    command: -connectRetries=10 migrate
    volumes:
      - ../flyway/sql:/flyway/sql
    environment:
      FLYWAY_URL: jdbc:postgresql://db-test:5432/test_${NPD_DB_NAME}
      FLYWAY_USER: ${NPD_DB_USER}
      FLYWAY_PASSWORD: ${NPD_DB_PASSWORD}
    depends_on:
      db-test:
        condition: service_healthy
    networks:
      - npd
  django-test:
    build: .
    user: "${UID}:${GID}"  # UID and GID from host
    container_name: npd-test
    depends_on:
      db-test:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - npd
    environment:
      NPD_DJANGO_SECRET: ${NPD_DJANGO_SECRET}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${NPD_DB_ENGINE}
      NPD_DB_NAME: test_${NPD_DB_NAME}
      NPD_DB_USER: ${NPD_DB_USER}
      NPD_DB_PASSWORD: ${NPD_DB_PASSWORD}
      NPD_DB_HOST: db-test
      NPD_DB_PORT: "5432"
    env_file:
      - .env
    command: >
      sh -c "python manage.py test"
    volumes:
      - ./artifacts:/tmp
networks:
  npd: